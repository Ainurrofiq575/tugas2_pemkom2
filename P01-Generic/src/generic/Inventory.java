/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package generic;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.File;
import java.text.DecimalFormat;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author LENOVO
 */
public class Inventory extends javax.swing.JFrame {

    KoleksiFile koleksi = new KoleksiFile();

    /**
     * Creates new form Document
     */
    public Inventory() {
        initComponents();
        tblPlaylist.setModel(koleksi);
        resizeColumns();
        resizeLister();
    }

    private void resizeListener() {
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                resizeColumns();
            }

            private void resizeColumns() {
                throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void resizeLister() {
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                resizeColumns();
            }
        });
    }

    private void resizeColumns() {

    for (int i = 0; i < tblPlaylist.getColumnModel().getColumnCount(); i++) {
        if (i == 0) {
            tblPlaylist.getColumnModel().getColumn(i).setPreferredWidth(200); // Nama Barang
        } else if (i == 1) {
            tblPlaylist.getColumnModel().getColumn(i).setPreferredWidth(100); // Jumlah
        } else if (i == 2) {
            tblPlaylist.getColumnModel().getColumn(i).setPreferredWidth(150); // Keterangan
        }
    }
    }

    private String fileSizeOf(File file) {
        DecimalFormat format = new DecimalFormat("#.##");
        long MB = 1024 * 1024;
        long KB = 1024;
        final double length = file.length();
        if (length > MB) {
            return format.format(length / MB) + " MB";
        }
        if (length > KB) {
            return format.format(length / KB) + " KB";
        }
        return format.format(length) + " B";
    }

    private String extensionOf(File file) {
        String fileExtension = "";
        String fileName = file.getName();
        if (fileName.contains(".") && fileName.lastIndexOf(".") != 0) {
            fileExtension
                    = fileName.substring(fileName.lastIndexOf(".") + 1);
        }
        return fileExtension;
    }

    private void addFiles(File[] files) {
        for (File file : files) {
            String path = file.getAbsolutePath();
            String fn = file.getName();
            String fileName = fn.substring(0, fn.length() - 4);
            String fileSize = fileSizeOf(file);
            String extension = "";
            int i = path.lastIndexOf('.');
            if (i > 0) {
                extension = extensionOf(file);
            }
            Inventaris m = new Inventaris(path, fileName, fileSize, extension);
            koleksi.add(m);
        }
    }

    private void addFolder(File dir) {
        File[] listOfFiles = dir.listFiles();
        for (File listOfFile : listOfFiles) {
            if (listOfFile.isFile()) {
                String path = listOfFile.getAbsolutePath();
                String fn = listOfFile.getName();
                String fileName = fn.substring(0, fn.length() - 4);
                String fileSize = fileSizeOf(listOfFile);
                String extension;
                int i = path.lastIndexOf('.');
                if (i > 0) {
                    extension = extensionOf(listOfFile);
                    if ("mp3".equalsIgnoreCase(extension)) {
                        Inventaris m = new Inventaris(path, fileName, fileSize, extension);
                        koleksi.add(m);
                    }
                }
            } else if (listOfFile.isDirectory()) {
                addFolder(listOfFile);
            }
        }
    }
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupTombol = new javax.swing.JPopupMenu();
        addFiles = new javax.swing.JMenuItem();
        popuptombol1 = new javax.swing.JPopupMenu();
        Delete = new javax.swing.JMenuItem();
        clearDocument = new javax.swing.JMenuItem();
        pnFooter = new javax.swing.JPanel();
        btnDocument = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlaylist = new javax.swing.JTable();

        addFiles.setText("Add File(s)");
        addFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFilesActionPerformed(evt);
            }
        });
        popupTombol.add(addFiles);

        Delete.setText("Delete ");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        popuptombol1.add(Delete);

        clearDocument.setText("Clear");
        clearDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearDocumentActionPerformed(evt);
            }
        });
        popuptombol1.add(clearDocument);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnFooter.setBackground(new java.awt.Color(0, 0, 0));
        pnFooter.setPreferredSize(new java.awt.Dimension(400, 50));

        btnDocument.setText("TAMBAH");
        btnDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocumentActionPerformed(evt);
            }
        });

        jButton1.setText("HAPUS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnFooterLayout = new javax.swing.GroupLayout(pnFooter);
        pnFooter.setLayout(pnFooterLayout);
        pnFooterLayout.setHorizontalGroup(
            pnFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFooterLayout.createSequentialGroup()
                .addContainerGap(219, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(btnDocument)
                .addGap(13, 13, 13))
        );
        pnFooterLayout.setVerticalGroup(
            pnFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnFooterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnFooterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDocument, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(pnFooter, java.awt.BorderLayout.PAGE_END);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 50));

        jLabel1.setFont(new java.awt.Font("Centaur", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DATA INVENTARISKU");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        tblPlaylist.setBackground(new java.awt.Color(0, 0, 0));
        tblPlaylist.setForeground(new java.awt.Color(255, 255, 255));
        tblPlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPlaylist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPlaylistMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPlaylist);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDocumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocumentActionPerformed
        // TODO add your handling code here:
        popupTombol.show(btnDocument,
                btnDocument.getWidth(),
                btnDocument.getHeight()/2);
    }//GEN-LAST:event_btnDocumentActionPerformed

    private void addFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFilesActionPerformed
        // TODO add your handling code here:
            JFileChooser fc = new JFileChooser();
    fc.setDialogType(JFileChooser.FILES_ONLY);
    fc.setMultiSelectionEnabled(true);
    fc.setDialogTitle("Add Files");
    fc.setAcceptAllFileFilterUsed(false);
    fc.setFileFilter(new FileNameExtensionFilter("MP3 File (*.mp3)", "mp3"));
    fc.setFileFilter(new FileNameExtensionFilter("PDF File (*.pdf)", "pdf"));
    fc.setFileFilter(new FileNameExtensionFilter("DOCX File (*.docx)", "docx"));
    fc.setFileFilter(new FileNameExtensionFilter("JPG IMAGE File (*.jpg)", "jpg"));
    fc.setFileFilter(new FileNameExtensionFilter("PNG IMAGE File (*.png)", "png"));
    fc.setFileFilter(new FileNameExtensionFilter("All Suported Files (*.mp3,*.pdf,*.docx,*.jpg,*.png)", "mp3,pdf,docx,jpg,png"));
                    
    fc.setApproveButtonText("Add Files");
    
    int show = fc.showOpenDialog(this);
    if(show == JFileChooser.APPROVE_OPTION) {
        File[] files = fc.getSelectedFiles();
        addFiles(files);
    }
    }//GEN-LAST:event_addFilesActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        int row = tblPlaylist.getSelectedRow();
        if (row >= 0){
            koleksi.removeRow(row);
        }else{
            JOptionPane.showMessageDialog(null, "Pilih Data Yang Ingin Dihapus", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void clearDocumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearDocumentActionPerformed
        // TODO add your handling code here:
            koleksi.clear();
    }//GEN-LAST:event_clearDocumentActionPerformed

    private void tblPlaylistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPlaylistMouseClicked
// TODO add your handling code here:
int i = tblPlaylist.getSelectedRow();
if (evt.getClickCount() == 2 && i != -1) {
    Inventaris m = koleksi.get(i);
    JOptionPane.showMessageDialog(this, "<html>"
            + "<head>"
            + "<style>"
            + "table{border-collapse: collapse; border: 1px solid blue;}"
            + "tr{border-bottom: 1px solid black;}"
            + "td{padding: 5px;}"
            + "</style>"
            + "</head>"
            + "<body>"
            + "<h3>Detail Barang:</h3>"
            + "<table>"
            + "<tr><td>Lokasi</td><td>:</td><td>" + m.getPath() + "</td></tr>"
            + "<tr><td>Nama Barang</td><td>:</td><td>" + m.getFileName() + "</td></tr>"
            + "<tr><td>Jumlah</td><td>:</td><td>" + m.getJumlah() + "</td></tr>"
            + "<tr><td>Keterangan</td><td>:</td><td>" + m.getKeterangan() + "</td></tr>"
            + "</table>"
            + "</body>"
            + "</html>");
}
    }//GEN-LAST:event_tblPlaylistMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        popuptombol1.show(btnDocument,
                btnDocument.getWidth(),
                btnDocument.getHeight()/2);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Delete;
    private javax.swing.JMenuItem addFiles;
    private javax.swing.JButton btnDocument;
    private javax.swing.JMenuItem clearDocument;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnFooter;
    private javax.swing.JPopupMenu popupTombol;
    private javax.swing.JPopupMenu popuptombol1;
    private javax.swing.JTable tblPlaylist;
    // End of variables declaration//GEN-END:variables


}
